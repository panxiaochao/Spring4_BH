<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">

	<!-- 配置加载proxool配置文件 -->
    <servlet>
        <servlet-name>proxoolServletConfigurator</servlet-name>
        <servlet-class>
            org.logicalcobwebs.proxool.configuration.ServletConfigurator</servlet-class>
        <init-param>
            <param-name>xmlFile</param-name>
            <param-value>WEB-INF/proxool-mysql.xml</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
    </servlet>
     
    <!-- 配置proxool资源监控程序 -->
    <servlet>
        <servlet-name>adminP</servlet-name>
         <servlet-class>
             org.logicalcobwebs.proxool.admin.servlet.AdminServlet
         </servlet-class>
    </servlet>
    <servlet-mapping>
       <servlet-name>adminP</servlet-name>
       <url-pattern>/adminp</url-pattern>
    </servlet-mapping>

	<!-- 静态资源调用，不够的话再加手动加入 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.swf</url-pattern>
	</servlet-mapping>

	<!-- log4j2 web 3.0 -->
	<context-param>
		<param-name>isLog4jAutoInitializationDisabled</param-name>
		<param-value>true</param-value>
	</context-param>
	<!-- 启动 Spring Bean 工厂的监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 使Spring支持request与session的scope,如:<bean id="loginAction" class="com.foo.LoginAction" 
		scope="request"/> -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- Introspector缓存清除监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- 用来定位Spring XML文件的上下文配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring-*.xml
		</param-value>
	</context-param>
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- HiddenHttpMethodFilter:浏览器form表单只支持GET与POST请求，而DELETE、PUT等method并不支持， 
		spring3.0添加了一个过滤器，可以将这些请求转换为标准的http方法，使得 支持GET、POST、PUT与DELETE请求，该过滤器为HiddenHttpMethodFilter。 -->

	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>spring-mvc</servlet-name>
	</filter-mapping>

	<!-- spring Mvc -->
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- filter <filter> <filter-name>WebAusFilter</filter-name> <filter-class>org.pxcbpmisframework.core.interceptor.WebAusFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>WebAusFilter</filter-name> <url-pattern>*.jsp</url-pattern> 
		</filter-mapping> -->



	<!-- 解决中文字符乱码 -->
	<filter>
		<filter-name>Set Character Encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Set Character Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 验证码 <servlet> <servlet-name>safecode</servlet-name> <servlet-class>bpmis.pxc.system.servlet.SafeCodeImageServlet</servlet-class> 
		</servlet> <servlet-mapping> <servlet-name>safecode</servlet-name> <url-pattern>/safecode</url-pattern> 
		</servlet-mapping> -->
	<!-- 错误页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/webpage/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>405</error-code>
		<location>/webpage/error/405.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/webpage/error/500.jsp</location>
	</error-page>

	<!-- 提高系统性能，压缩js,css等文件 -->
	<filter>
		<filter-name>ecsideExport</filter-name>
		<filter-class>org.pxcbpmisframework.core.aop.GZipFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ecsideExport</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>


	<!-- webAppRootKey -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>bpmis4.0_pxc.root</param-value>
	</context-param>

	<!-- session超时设置30分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<!-- 上传 -->
	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<servlet-class>bpmis.pxc.system.controller.servlet.UploadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>/uploadFile</url-pattern>
	</servlet-mapping>
	

	<!-- 首页配置 -->
	<welcome-file-list>
		<welcome-file>/webpage/login.jsp</welcome-file>
	</welcome-file-list>

</web-app>
